package cc.surui.db;public class DatebaseInit {		private SQLiteJDBC sqLiteJDBC;	public DatebaseInit(SQLiteJDBC sqLiteJDBC){		this.sqLiteJDBC = sqLiteJDBC;	}	public static void initDB(SQLiteJDBC sqLiteJDBC){		new DatebaseInit(sqLiteJDBC).createTable();	}		private void createTable(){		String query_sql = "SELECT * FROM SQLITE_MASTER WHERE `TYPE`='table' AND `NAME`='PRODUCT'";		if(sqLiteJDBC.query(query_sql).size() == 0){			String sql_product = "CREATE TABLE PRODUCT " +					"(ID LONG PRIMARY KEY    NOT NULL, " +					" NAME           TEXT    NOT NULL, " +					" STORE_ID       INTEGER    NOT NULL, " +					" URL        	 VARCHAR(200), " +					" PIC         	 VARCHAR(200))";			sqLiteJDBC.update(sql_product);		}		query_sql = "SELECT * FROM SQLITE_MASTER WHERE `TYPE`='table' AND `NAME`='STORE'";		if(sqLiteJDBC.query(query_sql).size() == 0){			String sql_store = "CREATE TABLE STORE " +					"(ID LONG PRIMARY KEY    NOT NULL, " +					" NAME           TEXT    NOT NULL, " +					" PRODUCT_COUNT  INTEGER NOT NULL, " +					" URL        	 VARCHAR(200))";			sqLiteJDBC.update(sql_store);		}		query_sql = "SELECT * FROM SQLITE_MASTER WHERE `TYPE`='table' AND `NAME`='KEYWORD'";		if(sqLiteJDBC.query(query_sql).size() == 0){			String sql_keyword = "CREATE TABLE KEYWORD " +					"(ID INTEGER PRIMARY KEY AUTOINCREMENT, " +					" STORE_ID       INTEGER     NOT NULL," +					" KEYWORD        TEXT    NOT NULL, " +					" RESULTS        INTEGER, " +					" TOP_RANK       INTEGER, " +					" AVG_RANK		 INTEGER)";			sqLiteJDBC.update(sql_keyword);		}		query_sql = "SELECT * FROM SQLITE_MASTER WHERE `TYPE`='table' AND `NAME`='RANKING'";		if(sqLiteJDBC.query(query_sql).size() == 0){			String sql_rank = "CREATE TABLE RANKING " +					"(ID INTEGER PRIMARY KEY AUTOINCREMENT, " +					" STORE_ID       INTEGER NOT NULL," +					" PRODUCT_ID     LONG    NOT NULL, " +					" KEYWORD        TEXT    NOT NULL, " +					" RANK        	 INT, " +					" DATE      	 DATETIME)";			sqLiteJDBC.update(sql_rank);		}	}}